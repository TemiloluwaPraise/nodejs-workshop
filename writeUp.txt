first download node js
text editor
create a folder called notes-app
open it in your text editor
node -v
>>create a folder
>>mkdir notes-app
>>create a file
>>touch app.js
>>cd into the notes-app(folder)
>>open your text editor, create a console.log('starting app...).
>>run it on you command node app.js

require help us grab external or internal or third-party
node modules in our app
search node api on google click the first link
you will get a list of node internal module
click file system.
fs.appendFile(path, data[, options], callback)

in your app.js

const fs = require("fs");

fs.appendFileSync("greetings.txt", "hello world");

run node app.js

it will create a greeting.txt file

>> create a notes.js
console.log('starting notes....');

next  >>add 
const notes = require("./notes");
to your app.js
run node app.js

using ES6 funtions
function add(x, y) {
  return x + y;
}

var add = (x, y) => {
    return x + y
}

even better 
var add = (x, y) => x + y;

>>.in notes.js file
console.log("starting notes.js....");

var add = (x, y) => x + y;
var sub = (x, y) => x - y;
module.exports = {
  add,
  sub,
};

//without exporting the function
//it wont work

// module.exports.add = function add(x, y) {
//     return x + y;
//   }

//OR
// function add(x, y) {
//     return x + y;
//   }

//   module.exports= {
//     add
//   }

>>. in app.js console.log("starting app.js .......");

const fs = require("fs");
const notes = require("./notes");

// fs.appendFileSync("greetings.txt", "hello world");

console.log(notes.add(2, 5));
console.log(notes.sub(2, 5));

>> then run node app.js

now lets use third party modules-- 
modules other people has created
>> Open
npmjs.com
search for yargs 
yags helps you build command line tools

to start using third_party module first we do 
>> npm init
npm install yargs --save (the third party module)
>> check your package.json
"dependency" : "yargs"

>> in your app.js 
const yargs = require('yargs');
>>then
console.log(process.argv);
>>run node app.js list
>> you get this
starting app.js .......
starting notes.js....
[
  'C:\\Program Files\\nodejs\\node.exe',
  'C:\\Users\\oguny\\Desktop\\notes-app\\app.js',
  'list'
]

>>in your app.js
console.log('Process', process.argv);
console.log('Yargs', yargs.argv);

>>run node app.js read --title "notes-app" 
--body "get me the body"
>> you get this

starting app.js .......
starting notes.js....
Process [
  'C:\\Program Files\\nodejs\\node.exe',
  'C:\\Users\\oguny\\Desktop\\notes-app\\app.js',
  'read',
  '--title',
  'notes-app',
  '--body',
  'get me the body'
]
Yargs {
  _: [ 'read' ],
  title: 'notes-app',
  body: 'get me the body',
  '$0': 'app.js'
}
notes-app

--------------------------------------------------
PART #2

in this section we talk about saving a note tpo a test file

in your app.js
console.log('Starting app.js..);
const yargs = require('yargs');
const notes = require('./notes.js');
const args = yargs.argv;

console.log(yargs.argv);

var title = yargs.argv.title;
var body = yargs.argv.body;
var command = yargs.argv._[0];

console.log(title, body, command);

in your terminal run
node app.js list

you get this

Starting app.js..
starting notes.js....
undefined undefined list

in your terminal
node app.js add --title "note" --body "new note"

you get
Starting app.js..
starting notes.js....
note new note add

how do we get this 
console.log(yargs.argv);// in app.js
then in your terminal
$ node app.js add --title "note" --body "new note"

you get
Starting app.js..
starting notes.js....
{ _: [ 'add' ], title: 'note', body: 'new note', '$0': 'app.js' }
note new note add

in your app.js
console.log('Starting app.js..);
const yargs = require('yargs');
const notes = require('./notes.js');
const args = yargs.argv;

var title = yargs.argv.title;
var body = yargs.argv.body;
var command = yargs.argv._[0];

if (command === 'add') {
  console.log('adding note')
} else if (command === 'remove') {
  console.log('removing note')
} else if (command === 'read') {
  console.log('reading note')
} else if (command === 'list') {
  console.log('listing all notes')
} else {
  console.log('unknown command was used!')
}

try this in your terminal
node app.js add
node app.js remove
node app.js read
node app.js list

to use this in your notes.js 
create your fs require file
because thats where you want to do all the reading not in app.js

const fs = require('fs');

function addingNote(title, body) {
  var note = {
    title,
    body,
  };
  fs.writeFileSync("notes.txt", JSON.stringify(note));

module.export = {
  addingNote,
};

run this in your terminal
node app.js add --title "notes-app" --body "get me the body"

a notes.txt is create and inside the file you get 
{"title":"notes-app","body":"get me the body"}

run this in your terminal adding 2 to the title you realise it replaces the first one
node app.js add --title "notes-app2" --body "get me the body"

a notes.txt is create and inside the file you get 
{"title":"notes-app","body":"get me the body"}

const fs = require('fs');

function addingNote(title, body) {

var notes = fs.readFileSync('notes.txt');

//comment this then run it in the terminal you get a buffer

 // var note = {
   // title,
 //   body,
 // };
 // fs.writeFileSync("notes.txt", JSON.stringify(note));
}

module.export = {
  addingNote,
};


you get this biffer
s-app2" --body "get me the body"
Starting app.js..
adding note
<Buffer 7b 22 74 69 74 6c 65 22 3a 22 6e 6f
 74 65 73 2d 61 70 70 32 22 2c 22 62 6f 64 
79 22 3a 22 67 65 74 20 6d 65 20 74 68 65 20
 62 6f 64 79 22 7d>

then add to get a neat formatted object
var notes = JSON.parse(fs.readFileSync('notes.txt'));

you get this response

Starting app.js..
adding note
{ title: 'notes-app2', body: 'get me the body' }

to create an array of responses

const fs = require("fs");

function addingNote(title, body) {
  var notes = [];
  notes.push(JSON.parse(fs.readFileSync("notes.txt")));

  var note = {
    title,
    body,
  };

  notes.push(note);
  
  fs.writeFileSync("notes.txt", JSON.stringify(notes));
}

module.exports = {
  addingNote,
};

in your terminal run this
node app.js add --title "notes-app2" --body "get me another body"

you get 2 array in your notes.txt
[{"title":"notes-app2","body":"get me the body"},
{"title":"notes-app2","body":"get me another  body"}]

if you remove the two array, 
leave the notes.txt empty you get an error
because it try to parse an object that is already in notes according to our code
alas notes.txt is empty
if you run 
node app.js add --title "notes-app2" --body "get me another  body"

To fix it we use Try catch block

function addingNote(title, body) {
  var notes;
try {
 notes.push(JSON.parse(fs.readFileSync("notes.txt")));
  } catch (err) {
  notes = [];
 }

  var note = {
    title,
    body,
  };

  notes.push(note);
  
  fs.writeFileSync("notes.txt", JSON.stringify(notes));
}

module.exports = {
  addingNote,
};

run this
node app.js add --title "notes-app2" --body "get me another  body"
check notes.txt
you see it worked but we can make our code cleaner

function fetchNotes () {
 try {
  return notes.push(JSON.parse(fs.readFileSync("notes.txt"));
 } catch (err) {
   return [];
  }
}

function addingNote(title, body) {
  var notes = fetchNotes();

  var note = {
    title,
    body,
  };

  notes.push(note);

  fs.writeFileSync("notes.txt", JSON.stringify(notes));
}

module.exports = {
  addingNote,
};

run this
node app.js add --title "notes-app2" --body "get me another nice  body"
Starting app.js..
adding note

>>>refactoring to arrow function
var fetchNotes = () => {
 try {
  return notes.push(JSON.parse(fs.readFileSync("notes.txt"));
 } catch (err) {
   return [];
  }
}

var addingNote = (title, body) => {
  var notes = fetchNotes();

  var note = {
    title,
    body,
  };

  notes.push(note);

  fs.writeFileSync("notes.txt", JSON.stringify(notes));
}

module.exports = {
  addingNote,
};
------------------------------------------
now let remove a note 
first thing we do is read a file first

var removeNote = (title) => {
  var notes = fetchNotes();

  var filteredNotes = notes.filter((note) => note.title !== title);

  fs.writeFileSync("notes.txt", JSON.stringify(filteredNotes));
};

module.exports = {
  addingNote,
  removeNote
};

run this in your terminal
node app.js remove --title "notes-app2"

you get
Starting app.js..
removing note

-- title "note2" is deleted
------------------------------------------------------
For reading Note

var readNote = (title) => {
  var notes = fetchNotes();

  var filteredNotes = notes.filter((note) => note.title !== title)

  console.log(filteredNotes)

}
run 
node app.js read --title "notes-app3"
you get
Starting app.js..
reading note
[ { title: 'notes-app1', body: 'get me another  body' } ]

change the 
  console.log(filteredNotes) to console.log(`Title: ${filteredNotes[0].title} Body: ${filteredNotes[0].body}`);

var readNote = (title) => {
  var notes = fetchNotes();

  var filteredNotes = notes.filter((note) => note.title !== title)

  console.log(`Title: ${filteredNotes[0].title} Body: ${filteredNotes[0].body}`);

}

run

node app.js read --title "notes-app3"

you get
Starting app.js..
reading note
Title: notes-app1 Body: get me another  body

----------------------------------------------
reactoring with logNote
>>in you app.js
console.log("Starting app.js..");

const yargs = require("yargs");
const notes = require("./notes.js");
const argv = yargs.argv;

var title = yargs.argv.title;
var body = yargs.argv.body;
var command = yargs.argv._[0];

if (command === "add") {
  console.log("adding note");
  notes.addingNote(title, body);
} else if (command === "remove") {
  console.log("removing note");
  notes.removeNote(title);
} else if (command === "read") {
  console.log("reading note");
  notes.readNote(title);
} else if (command === "list") {
  console.log("listing all notes");
  notes.getAllNotes();
} else {
  console.log("unknown command was used!");
}

>>in your notes.js

var addingNote = (title, body) => {
  var notes = fetchNotes();

  var note = {
    title,
    body,
  };

  notes.push(note);

  fs.writeFileSync("notes.txt", JSON.stringify(notes));

  logNote(note);
};

var removeNote = (title) => {
  var notes = fetchNotes();

  var filteredNotes = notes.filter((note) => note.title !== title);

  logNote(filteredNotes[0]);
};

var readNote = (title) => {
  var notes = fetchNotes();

  var filteredNotes = notes.filter((note) => note.title !== title);

  logNote(filteredNotes[0]);
};

var getAllNotes = () => {
  var notes = fetchNotes();

  notes.forEach((note) => logNote(note));

  logNote(notes);
};

var logNote = (note) => {
  console.log("************************");
  console.log(`Title: ${note.title}`);
  console.log(`Body: ${note.body}`);
};

module.exports = {
  addingNote,
  removeNote,
  readNote,
  getAllNotes,
  logNote,
};

run this
node app.js list

you get
Starting app.js..
listing all notes
************************
Title: notes-app1
Body: get me another  body
************************
Title: notes-app2
Body: get me another nice  body
************************
Title: notes-app3
Body: get me another nice  body
************************
Title: undefined
Body: undefined

---------------------------------------
checking for double title in note

var fetchNotes = () => {
  try {
    return JSON.parse(fs.readFileSync("notes.txt"));
  } catch (err) {
    return [];
  }
};

var addingNote = (title, body) => {
  var notes = fetchNotes();

  var note = {
    title,
    body,
  };

  notes.push(note);

  fs.writeFileSync("notes.txt", JSON.stringify(notes));

  logNote(note);

var double = notes.filter((note) => note.title === title);

  if(double.length === 0) {
    notes.push(note);

    fs.writeFileSync("notes.txt", JSON.stringify(notes));

    logNote(note);
  } else {
    console.log("STOP: Title already exists.");
  }
};

var removeNote = (title) => {
  var notes = fetchNotes();

  var filteredNotes = notes.filter((note) => note.title !== title);

  logNote(filteredNotes[0]);
};

var readNote = (title) => {
  var notes = fetchNotes();

  var filteredNotes = notes.filter((note) => note.title !== title);

  logNote(filteredNotes[0]);
};

var getAllNotes = () => {
  var notes = fetchNotes();

  notes.forEach((note) => logNote(note));

  logNote(notes);
};

var logNote = (note) => {
  console.log("************************");
  console.log(`Title: ${note.title}`);
  console.log(`Body: ${note.body}`);
};

module.exports = {
  addingNote,
  removeNote,
  readNote,
  getAllNotes,
  logNote,
};

run this
node app.js add --title "notes-app" --body "get me the body"

you get
Starting app.js..
adding note
************************
Title: notes-app
Body: get me the body
STOP: Title already exists.

[{"title":"Arsenalrr","body":"dddddddddddddddddddddddddddddddddd"},
{"title":"Note App2","body":"A note application create by me88888888888"},
{"title":"Arsenal","body":"Why are they so good"}]